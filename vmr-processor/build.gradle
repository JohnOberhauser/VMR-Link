apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

dependencies {
    implementation project(':vmr-annotation')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    api 'com.squareup:kotlinpoet:1.5.0'
    implementation "com.google.auto.service:auto-service:1.0-rc6"
    kapt "com.google.auto.service:auto-service:1.0-rc6"
}

sourceCompatibility = "8"
targetCompatibility = "8"

ext {
    bintrayRepo = 'Android-Libs'
    bintrayName = 'VMR-Processor'

    publishedGroupId = 'com.ober'
    libraryName = 'VMR-Processor'
    artifact = 'vmr-processor'

    libraryDescription = 'A link between your view model and your repository layer'

    siteUrl = 'https://github.com/JohnOberhauser/VMR-Link'
    gitUrl = 'https://github.com/JohnOberhauser/VMR-Link.git'

    libraryVersion = '3.0.10'

    developerId = 'JohnOberhauser'
    developerName = 'John Oberhauser'

    licenseName = 'GNU General Public License v3.0'
    licenseUrl = 'https://raw.githubusercontent.com/JohnOberhauser/VMR-Link/master/LICENSE'
    allLicenses = ["gpl-3.0"]
}

group = publishedGroupId
version = libraryVersion

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'jar'
            groupId publishedGroupId
            artifactId artifact

            name libraryName
            description libraryDescription
            url siteUrl

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        dryRun = false
        publish = true
        override = true
        publicDownloadNumbers = true
        version {
            name = project.version
            released = new Date()
            desc = libraryDescription
        }
    }
}